---
# tasks file for assosicate_ct_request

- name: send specific query to get the ct_name
  ansible.builtin.uri:
    url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/qe?type=staging"
    method: POST
    return_content: yes
    status_code: 200
    headers:
      Content-Type: "application/json"
      AUTHTOKEN: "{{ login.json.token }}"
    validate_certs: false
    body: {"query": "match(node('ep_endpoint_policy', name=\"{{ ct_name }}\"))"}
    force_basic_auth: yes
    body_format: json
  register: tstqry
  run_once: True


- name: narrow down the ct_name list
  ansible.builtin.set_fact:
    ct_name_list: "{{ tstqry.json | dict2items }}"

- name: show ct_nams
  ansible.builtin.debug:
    msg: "{{ item[ct_name].id }}"
  loop: "{{ ct_name_list[0].value }}"

- name: create ct_name list id variable
  ansible.builtin.set_fact:
    ct_name_list_id: []


- name: ct_name list with id
  ansible.builtin.set_fact:
     ct_name_list_id: "{{ ct_name_list_id + [ item[ct_name].id ] }}"
  ignore_errors: yes
  when:
    - item[ct_name].id != None and item[ct_name].label == ct_name
  loop: "{{ ct_name_list[0].value }}"


- name: show ct_names with id
  ansible.builtin.debug:
    msg: "{{ ct_name_list_id[0] }}" 

- name: show request body
  ansible.builtin.debug:
    msg: "{{ lookup('ansible.builtin.template', './templates/assign-connectivity-template.j2') }}"
  loop: "{{ interface_ids }}"



- name: Associate connectivity template with interface
  ansible.builtin.uri:
    url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/obj-policy-batch-apply?async=full"
    method: PATCH
    status_code: 202
    headers:
      content-type: "application/json"
      AUTHTOKEN: "{{ login.json.token }}"
    validate_certs: false
    force_basic_auth: yes
    body: "{{ lookup('ansible.builtin.template', './templates/assign-connectivity-template.j2') }}"
    body_format: json
  ignore_errors: true
  loop: "{{ interface_ids }}"





