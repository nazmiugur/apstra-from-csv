---
# tasks file for create_vn_from_flat_list

- name: Initialize Variables
  ansible.builtin.set_fact: 
    leaf_ids: ""

- name: Get Device ID
  ansible.builtin.include_role:
    name: get_node_system
  vars:
    node_type: system

- name: show vn
  ansible.builtin.debug:
    msg: "{{ vn }}"


- name: set security zone name
  ansible.builtin.set_fact:
    sz_name: "{{ vn['sz'] }}"

- name: set security zone ID
  ansible.builtin.set_fact:
    sz: "{{ vn['sz'] }}"

- name: "Retrieve Security ID if not set"
  block:
  - name: "Get Security ID"
    ansible.builtin.uri:
      url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/nodes?node_type=security_zone"
      method: GET
      return_content: yes
      status_code: 200
      headers:
        content-type: "application/json"
        AUTHTOKEN: "{{ login.json.token }}"
      validate_certs: false
      force_basic_auth: yes
    register: security

- name: set security zone ID
  ansible.builtin.set_fact:
    sz_id: "{{ security.json | cleanup_security_zone(sz_name) }}"



- name: show vn_switches
  ansible.builtin.debug:
    msg: "{{ vn['switches'] }}"


- name: set system id
  ansible.builtin.set_fact:
    leaf_ids: "{{ node_system.json | cleanup_specific_leaf_ids(vn['switches']) }}"
  when: leaf_ids == ""

- name: show leaf_ids
  ansible.builtin.debug:
    msg: "{{ leaf_ids }}"

- name: show body of createvn
  ansible.builtin.debug:
    msg: "{{ lookup('template','create_vn_from_flat_list.j2') }}"


- name: "Create Virtual Networks"
  ansible.builtin.uri:
    url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/virtual-networks-batch?async=full"
    method: POST
    return_content: yes
    status_code: 202
    headers:
      content-type: "application/json"
      AUTHTOKEN: "{{ login.json.token }}"
    validate_certs: false
    force_basic_auth: yes
    body: "{{ lookup('template','create_vn_from_flat_list.j2') }}"
    body_format: json
  ignore_errors: yes





- name: "Assign EVPN L3 VNIs"
  uri:
    url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/resource_groups/vni/evpn_l3_vnis"
    method: PUT
    status_code: 202
    headers:
      content-type: "application/json"
      AUTHTOKEN: "{{ login.json.token }}"
    validate_certs: false
    body: '{"pool_ids":["Default-10000-20000"]}'
    body_format: json

